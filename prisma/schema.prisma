// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username   String
  fullname   String
  email      String
  password   String       @db.Text
  phone_no   String       @db.Char(15)
  bio        String       @db.Char(160)
  address    String       @db.Text
  posts      posts[]
  comments   comments[]
  savedPosts savedPosts[]
  createdAt  DateTime     @default(dbgenerated("now()")) @db.Timestamptz()
}

model posts {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String       @db.Text
  description String       @db.Text
  user        users?       @relation(fields: [userId], references: [id])
  userId      String?      @db.Uuid
  media_url   String       @db.Text
  comments    comments[]
  savedPosts  savedPosts[]
  createdAt   DateTime     @default(dbgenerated("now()")) @db.Timestamptz()
}

model comments {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content   String   @db.Text
  post      posts    @relation(fields: [postId], references: [id])
  postId    String   @db.Uuid
  user      users    @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz()
}

model savedPosts {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users     users?   @relation(fields: [usersId], references: [id])
  usersId   String?  @db.Uuid
  posts     posts?   @relation(fields: [postsId], references: [id])
  postsId   String?  @db.Uuid
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz()
}























// model savedPosts {
//   id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   posts   post   @relation(fields: [postsId], references: [id])
//   postsId String @db.Uuid
// }

// model comment {
//   id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   comments  String
//   createdAt DateTime @default(dbgenerated("now()"))
//   creator   user     @relation(fields: [creatorId], references: [id])
//   creatorId String   @db.Uuid
//   posts     post     @relation(fields: [postsId], references: [id])
//   postsId   String   @db.Uuid
//   ngo       company  @relation(fields: [ngoId], references: [id])
//   ngoId     String   @db.Uuid
// }

// model company {
//   id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   name          String
//   email         String
//   password      String
//   contactNumber Int
//   bio           String
//   address       String
//   comments      comment[]
//   users         user[]
//   LikedPost     post[]
//   job           jobOffer[]
// }

// model jobOffer {
//   id             String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   profession     String
//   skills         String
//   transportation String
//   time           String
//   location       String
//   salary         Int
//   description    String
//   ngo            company @relation(fields: [ngoId], references: [id])
//   ngoId          String  @db.Uuid
//   savedBy        user    @relation(fields: [usersId], references: [id])
//   usersId        String  @db.Uuid
// }
